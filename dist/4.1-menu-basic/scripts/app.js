(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

// IMPORTS =========================================================================================
var Cycle = require("cyclejs");
var Rx = Cycle.Rx;
var h = Cycle.h;

var makeClass = require("classnames");

// APP =============================================================================================
Cycle.registerCustomElement("Menu", function (DOM, Props) {
  var Model = Cycle.createModel(function (Intent) {
    return {
      active$: Intent.get("selectActive$").startWith(0) };
  });

  var View = Cycle.createView(function (Model, Props) {
    var active$ = Model.get("active$");
    var items$ = Props.get("items$");
    return {
      vtree$: active$.combineLatest(items$, function (active, items) {
        return h("div", null, [h("ul", null, [items.map(function (item, i) {
          return h("li", { attributes: { "data-index": i }, key: i, className: makeClass({ "menu-item": true, active: i == active }) }, [item]);
        })]), h("p", null, ["Selected: ", h("b", null, [items[active]])])]);
      }) };
  });

  var Intent = Cycle.createIntent(function (DOM) {
    return {
      selectActive$: DOM.event$(".menu-item", "click").map(function (event) {
        return event.target.dataset.index;
      }) };
  });

  DOM.inject(View).inject(Model, Props)[0].inject(Intent).inject(DOM);
});

var View = Cycle.createView(function () {
  return {
    vtree$: Rx.Observable["return"](h("Menu", { items: ["Home", "Services", "About", "Contact us"] })) };
});

Cycle.createDOMUser("main").inject(View);

// TODO https://github.com/alexmingoia/jsx-transform/issues/15

},{"classnames":"classnames","cyclejs":"cyclejs"}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImJ1aWxkLzQuMS1tZW51LWJhc2ljL3NjcmlwdHMvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FDQ0EsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzFCLEVBQUUsR0FBTyxLQUFLLENBQWQsRUFBRTtJQUFFLENBQUMsR0FBSSxLQUFLLENBQVYsQ0FBQzs7QUFDVixJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7OztBQUd0QyxLQUFLLENBQUMscUJBQXFCLENBQUMsTUFBTSxFQUFFLFVBQUMsR0FBRyxFQUFFLEtBQUssRUFBSztBQUNsRCxNQUFJLEtBQUssR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLFVBQUEsTUFBTSxFQUFJO0FBQ3RDLFdBQU87QUFDTCxhQUFPLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQ2xELENBQUM7R0FDSCxDQUFDLENBQUM7O0FBRUgsTUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQyxVQUFDLEtBQUssRUFBRSxLQUFLLEVBQUs7QUFDNUMsUUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNuQyxRQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2pDLFdBQU87QUFDTCxZQUFNLEVBQUUsT0FBTyxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsVUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFLO0FBQ3ZELGVBQ0UsQ0FBQyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FDYixDQUFDLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxDQUNaLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBQyxJQUFJLEVBQUUsQ0FBQztpQkFDaEIsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFDLFVBQVUsRUFBRSxFQUFDLFlBQVksRUFBRSxDQUFDLEVBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsRUFBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLElBQUksTUFBTSxFQUFDLENBQUMsRUFBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7U0FBQSxDQUN6SCxDQUNGLENBQUMsRUFDRixDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUM1RCxDQUFDLENBQ0Y7T0FDSCxDQUFDLEVBRUgsQ0FBQztHQUNILENBQUMsQ0FBQzs7QUFFSCxNQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDLFVBQUEsR0FBRyxFQUFJO0FBQ3JDLFdBQU87QUFDTCxtQkFBYSxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLEtBQUs7ZUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLO09BQUEsQ0FBQyxFQUMxRixDQUFDO0dBQ0gsQ0FBQyxDQUFDOztBQUVILEtBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQ3JFLENBQUMsQ0FBQzs7QUFFSCxJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLFlBQU07QUFDaEMsU0FBTztBQUNMLFVBQU0sRUFBRSxFQUFFLENBQUMsVUFBVSxVQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFlBQVksQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUM5RixDQUFDO0NBQ0gsQ0FBQyxDQUFDOztBQUVILEtBQUssQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8vIElNUE9SVFMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmxldCBDeWNsZSA9IHJlcXVpcmUoXCJjeWNsZWpzXCIpO1xubGV0IHtSeCwgaH0gPSBDeWNsZTtcbmxldCBtYWtlQ2xhc3MgPSByZXF1aXJlKFwiY2xhc3NuYW1lc1wiKTtcblxuLy8gQVBQID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuQ3ljbGUucmVnaXN0ZXJDdXN0b21FbGVtZW50KFwiTWVudVwiLCAoRE9NLCBQcm9wcykgPT4ge1xuICBsZXQgTW9kZWwgPSBDeWNsZS5jcmVhdGVNb2RlbChJbnRlbnQgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBhY3RpdmUkOiBJbnRlbnQuZ2V0KFwic2VsZWN0QWN0aXZlJFwiKS5zdGFydFdpdGgoMCksXG4gICAgfTtcbiAgfSk7XG5cbiAgbGV0IFZpZXcgPSBDeWNsZS5jcmVhdGVWaWV3KChNb2RlbCwgUHJvcHMpID0+IHtcbiAgICBsZXQgYWN0aXZlJCA9IE1vZGVsLmdldChcImFjdGl2ZSRcIik7XG4gICAgbGV0IGl0ZW1zJCA9IFByb3BzLmdldChcIml0ZW1zJFwiKTtcbiAgICByZXR1cm4ge1xuICAgICAgdnRyZWUkOiBhY3RpdmUkLmNvbWJpbmVMYXRlc3QoaXRlbXMkLCAoYWN0aXZlLCBpdGVtcykgPT4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGgoJ2RpdicsIG51bGwsIFtcbiAgICAgICAgICAgIGgoJ3VsJywgbnVsbCwgW1xuICAgICAgICAgICAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+XG4gICAgICAgICAgICAgICAgaCgnbGknLCB7YXR0cmlidXRlczoge1wiZGF0YS1pbmRleFwiOiBpfSwga2V5OiBpLCBjbGFzc05hbWU6IG1ha2VDbGFzcyh7XCJtZW51LWl0ZW1cIjogdHJ1ZSwgYWN0aXZlOiBpID09IGFjdGl2ZX0pfSwgW2l0ZW1dKVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIGgoJ3AnLCBudWxsLCBbXCJTZWxlY3RlZDogXCIsIGgoJ2InLCBudWxsLCBbaXRlbXNbYWN0aXZlXV0pXSlcbiAgICAgICAgICBdKVxuICAgICAgICApO1xuICAgICAgfSksXG4gICAgICAvLyBUT0RPIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4bWluZ29pYS9qc3gtdHJhbnNmb3JtL2lzc3Vlcy8xNVxuICAgIH07XG4gIH0pO1xuXG4gIGxldCBJbnRlbnQgPSBDeWNsZS5jcmVhdGVJbnRlbnQoRE9NID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgc2VsZWN0QWN0aXZlJDogRE9NLmV2ZW50JChcIi5tZW51LWl0ZW1cIiwgXCJjbGlja1wiKS5tYXAoZXZlbnQgPT4gZXZlbnQudGFyZ2V0LmRhdGFzZXQuaW5kZXgpLFxuICAgIH07XG4gIH0pO1xuXG4gIERPTS5pbmplY3QoVmlldykuaW5qZWN0KE1vZGVsLCBQcm9wcylbMF0uaW5qZWN0KEludGVudCkuaW5qZWN0KERPTSk7XG59KTtcblxubGV0IFZpZXcgPSBDeWNsZS5jcmVhdGVWaWV3KCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICB2dHJlZSQ6IFJ4Lk9ic2VydmFibGUucmV0dXJuKGgoXCJNZW51XCIsIHtpdGVtczogW1wiSG9tZVwiLCBcIlNlcnZpY2VzXCIsIFwiQWJvdXRcIiwgXCJDb250YWN0IHVzXCJdfSkpLFxuICB9O1xufSk7XG5cbkN5Y2xlLmNyZWF0ZURPTVVzZXIoXCJtYWluXCIpLmluamVjdChWaWV3KTsiXX0=
