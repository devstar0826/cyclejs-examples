(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

// IMPORTS =========================================================================================
var Cycle = require("cyclejs");
var Rx = Cycle.Rx;
var h = Cycle.h;

var Menu = require("./menu");

// APP =============================================================================================
var data = ["Home", "Services", "About", "Contact us"];

var active = "Services";

var View = Cycle.createView(function () {
  return {
    vtree$: Rx.Observable["return"](h("Menu", { items: data, active: active })) };
});

Cycle.createDOMUser("main").inject(View);

},{"./menu":2,"cyclejs":"cyclejs"}],2:[function(require,module,exports){
"use strict";

// IMPORTS =========================================================================================
var Cycle = require("cyclejs");
var Rx = Cycle.Rx;
var h = Cycle.h;

var makeClass = require("classnames");

// COMPONENTS ======================================================================================
Cycle.registerCustomElement("Menu", function (DOM, Props) {
  var Model = Cycle.createModel(function (Intent, Props) {
    var items$ = Props.get("items$");
    var active$ = Props.get("active$");
    var selectActive$ = Intent.get("selectActive$");
    return {
      items$: items$,
      active$: active$.merge(selectActive$) };
  });

  var View = Cycle.createView(function (Model) {
    var items$ = Model.get("items$");
    var active$ = Model.get("active$");
    return {
      vtree$: items$.combineLatest(active$, function (items, active) {
        return h("div", null, [h("nav", null, [items.map(function (item) {
          return h("div", { attributes: { "data-name": item }, key: item,
            className: makeClass({ "menu-item": true, active: item == active }) }, [item]);
        })]), h("p", null, ["Selected: ", h("b", null, [active])])]);
      }) };
  });

  var Intent = Cycle.createIntent(function (DOM) {
    return {
      selectActive$: DOM.event$(".menu-item", "click").map(function (event) {
        return event.currentTarget.dataset.name;
      }) };
  });

  DOM.inject(View).inject(Model).inject(Intent, Props)[0].inject(DOM);
});

// TODO https://github.com/alexmingoia/jsx-transform/issues/15

},{"classnames":"classnames","cyclejs":"cyclejs"}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImJ1aWxkLzQuMS1tZW51LWJhc2ljL3NjcmlwdHMvYXBwLmpzIiwiYnVpbGQvNC4xLW1lbnUtYmFzaWMvc2NyaXB0cy9tZW51LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FDQ0EsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzFCLEVBQUUsR0FBTyxLQUFLLENBQWQsRUFBRTtJQUFFLENBQUMsR0FBSSxLQUFLLENBQVYsQ0FBQzs7QUFDVixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7OztBQUc3QixJQUFJLElBQUksR0FBRyxDQUNULE1BQU0sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFlBQVksQ0FDMUMsQ0FBQzs7QUFFRixJQUFJLE1BQU0sR0FBRyxVQUFVLENBQUM7O0FBRXhCLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUM7U0FBTztBQUNqQyxVQUFNLEVBQUUsRUFBRSxDQUFDLFVBQVUsVUFBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUMsQ0FBQyxDQUFDLEVBQ3ZFO0NBQUMsQ0FBQyxDQUFDOztBQUVKLEtBQUssQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDOzs7Ozs7QUNmekMsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzFCLEVBQUUsR0FBTyxLQUFLLENBQWQsRUFBRTtJQUFFLENBQUMsR0FBSSxLQUFLLENBQVYsQ0FBQzs7QUFDVixJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7OztBQUd0QyxLQUFLLENBQUMscUJBQXFCLENBQUMsTUFBTSxFQUFFLFVBQUMsR0FBRyxFQUFFLEtBQUssRUFBSztBQUNsRCxNQUFJLEtBQUssR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLFVBQUMsTUFBTSxFQUFFLEtBQUssRUFBSztBQUMvQyxRQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2pDLFFBQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDbkMsUUFBSSxhQUFhLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUNoRCxXQUFPO0FBQ0wsWUFBTSxFQUFFLE1BQU07QUFDZCxhQUFPLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsRUFDdEMsQ0FBQTtHQUNGLENBQUMsQ0FBQzs7QUFFSCxNQUFJLElBQUksR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLFVBQUEsS0FBSyxFQUFJO0FBQ25DLFFBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDakMsUUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNuQyxXQUFPO0FBQ0wsWUFBTSxFQUFFLE1BQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLFVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBSztBQUN2RCxlQUNFLENBQUMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQ2IsQ0FBQyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FDYixLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUEsSUFBSTtpQkFDWixDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUMsVUFBVSxFQUFFLEVBQUMsV0FBVyxFQUFFLElBQUksRUFBQyxFQUFFLEdBQUcsRUFBRSxJQUFJO0FBQ2xELHFCQUFTLEVBQUUsU0FBUyxDQUFDLEVBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxJQUFJLE1BQU0sRUFBQyxDQUFDLEVBQUMsRUFBRSxDQUNwRSxJQUFJLENBQ0wsQ0FBQztTQUFBLENBQ0gsQ0FDRixDQUFDLEVBQ0YsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FDWCxZQUFZLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUNyQyxDQUFDLENBQ0gsQ0FBQyxDQUNGO09BQ0gsQ0FBQyxFQUVILENBQUM7R0FDSCxDQUFDLENBQUM7O0FBRUgsTUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDLFlBQVksQ0FBQyxVQUFBLEdBQUcsRUFBSTtBQUNyQyxXQUFPO0FBQ0wsbUJBQWEsRUFBRSxHQUFHLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FDN0MsR0FBRyxDQUFDLFVBQUEsS0FBSztlQUFJLEtBQUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLElBQUk7T0FBQSxDQUFDLEVBQ2xELENBQUM7R0FDSCxDQUFDLENBQUM7O0FBRUgsS0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDckUsQ0FBQyxDQUFDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8vIElNUE9SVFMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmxldCBDeWNsZSA9IHJlcXVpcmUoXCJjeWNsZWpzXCIpO1xubGV0IHtSeCwgaH0gPSBDeWNsZTtcbmxldCBNZW51ID0gcmVxdWlyZShcIi4vbWVudVwiKTtcblxuLy8gQVBQID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxubGV0IGRhdGEgPSBbXG4gIFwiSG9tZVwiLCBcIlNlcnZpY2VzXCIsIFwiQWJvdXRcIiwgXCJDb250YWN0IHVzXCJcbl07XG5cbmxldCBhY3RpdmUgPSBcIlNlcnZpY2VzXCI7XG5cbmxldCBWaWV3ID0gQ3ljbGUuY3JlYXRlVmlldygoKSA9PiAoe1xuICB2dHJlZSQ6IFJ4Lk9ic2VydmFibGUucmV0dXJuKGgoXCJNZW51XCIsIHtpdGVtczogZGF0YSwgYWN0aXZlOiBhY3RpdmV9KSksXG59KSk7XG5cbkN5Y2xlLmNyZWF0ZURPTVVzZXIoXCJtYWluXCIpLmluamVjdChWaWV3KTsiLCIvLyBJTVBPUlRTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5sZXQgQ3ljbGUgPSByZXF1aXJlKFwiY3ljbGVqc1wiKTtcbmxldCB7UngsIGh9ID0gQ3ljbGU7XG5sZXQgbWFrZUNsYXNzID0gcmVxdWlyZShcImNsYXNzbmFtZXNcIik7XG5cbi8vIENPTVBPTkVOVFMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbkN5Y2xlLnJlZ2lzdGVyQ3VzdG9tRWxlbWVudChcIk1lbnVcIiwgKERPTSwgUHJvcHMpID0+IHtcbiAgbGV0IE1vZGVsID0gQ3ljbGUuY3JlYXRlTW9kZWwoKEludGVudCwgUHJvcHMpID0+IHtcbiAgICBsZXQgaXRlbXMkID0gUHJvcHMuZ2V0KFwiaXRlbXMkXCIpO1xuICAgIGxldCBhY3RpdmUkID0gUHJvcHMuZ2V0KFwiYWN0aXZlJFwiKTtcbiAgICBsZXQgc2VsZWN0QWN0aXZlJCA9IEludGVudC5nZXQoXCJzZWxlY3RBY3RpdmUkXCIpO1xuICAgIHJldHVybiB7XG4gICAgICBpdGVtcyQ6IGl0ZW1zJCxcbiAgICAgIGFjdGl2ZSQ6IGFjdGl2ZSQubWVyZ2Uoc2VsZWN0QWN0aXZlJCksXG4gICAgfVxuICB9KTtcblxuICBsZXQgVmlldyA9IEN5Y2xlLmNyZWF0ZVZpZXcoTW9kZWwgPT4ge1xuICAgIGxldCBpdGVtcyQgPSBNb2RlbC5nZXQoXCJpdGVtcyRcIik7XG4gICAgbGV0IGFjdGl2ZSQgPSBNb2RlbC5nZXQoXCJhY3RpdmUkXCIpO1xuICAgIHJldHVybiB7XG4gICAgICB2dHJlZSQ6IGl0ZW1zJC5jb21iaW5lTGF0ZXN0KGFjdGl2ZSQsIChpdGVtcywgYWN0aXZlKSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgaCgnZGl2JywgbnVsbCwgW1xuICAgICAgICAgICAgaCgnbmF2JywgbnVsbCwgW1xuICAgICAgICAgICAgICBpdGVtcy5tYXAoaXRlbSA9PlxuICAgICAgICAgICAgICAgIGgoJ2RpdicsIHthdHRyaWJ1dGVzOiB7XCJkYXRhLW5hbWVcIjogaXRlbX0sIGtleTogaXRlbSxcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogbWFrZUNsYXNzKHtcIm1lbnUtaXRlbVwiOiB0cnVlLCBhY3RpdmU6IGl0ZW0gPT0gYWN0aXZlfSl9LCBbXG4gICAgICAgICAgICAgICAgICBpdGVtXG4gICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBoKCdwJywgbnVsbCwgW1xuICAgICAgICAgICAgICBcIlNlbGVjdGVkOiBcIiwgaCgnYicsIG51bGwsIFthY3RpdmVdKVxuICAgICAgICAgICAgXSlcbiAgICAgICAgICBdKVxuICAgICAgICApO1xuICAgICAgfSksXG4gICAgICAvLyBUT0RPIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4bWluZ29pYS9qc3gtdHJhbnNmb3JtL2lzc3Vlcy8xNVxuICAgIH07XG4gIH0pO1xuXG4gIGxldCBJbnRlbnQgPSBDeWNsZS5jcmVhdGVJbnRlbnQoRE9NID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgc2VsZWN0QWN0aXZlJDogRE9NLmV2ZW50JChcIi5tZW51LWl0ZW1cIiwgXCJjbGlja1wiKVxuICAgICAgICAubWFwKGV2ZW50ID0+IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC5uYW1lKSxcbiAgICB9O1xuICB9KTtcblxuICBET00uaW5qZWN0KFZpZXcpLmluamVjdChNb2RlbCkuaW5qZWN0KEludGVudCwgUHJvcHMpWzBdLmluamVjdChET00pO1xufSk7Il19
